/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/0xcadams/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { ZeroCustomType } from "drizzle-zero";
import type { default as zeroSchema } from "./drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    comment: {
      name: "comment",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "comment",
            "id"
          >,
        },
        feedbackId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "comment",
            "feedbackId"
          >,
          serverName: "feedback_id",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "comment",
            "userId"
          >,
          serverName: "user_id",
        },
        message: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "comment",
            "message"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "comment",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "comment",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    feedback: {
      name: "feedback",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "id"
          >,
        },
        userId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "userId"
          >,
          serverName: "user_id",
        },
        workspaceId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "workspaceId"
          >,
          serverName: "workspace_id",
        },
        title: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "title"
          >,
        },
        message: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "message"
          >,
        },
        likesCount: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "likesCount"
          >,
          serverName: "likes_count",
        },
        commentsCount: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "commentsCount"
          >,
          serverName: "comments_count",
        },
        status: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "status"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "feedback",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    like: {
      name: "like",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "like",
            "id"
          >,
        },
        feedbackId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "like",
            "feedbackId"
          >,
          serverName: "feedback_id",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "like",
            "userId"
          >,
          serverName: "user_id",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "like",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "like",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    member: {
      name: "member",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "member",
            "id"
          >,
        },
        organizationId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "member",
            "organizationId"
          >,
          serverName: "organization_id",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "member",
            "userId"
          >,
          serverName: "user_id",
        },
        role: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "member",
            "role"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "member",
            "createdAt"
          >,
          serverName: "created_at",
        },
      },
      primaryKey: ["id"],
    },
    organization: {
      name: "organization",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "organization",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "organization",
            "name"
          >,
        },
        slug: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "organization",
            "slug"
          >,
        },
        logo: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "organization",
            "logo"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "organization",
            "createdAt"
          >,
          serverName: "created_at",
        },
        metadata: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "organization",
            "metadata"
          >,
        },
      },
      primaryKey: ["id"],
    },
    user: {
      name: "user",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "email"
          >,
        },
        emailVerified: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "emailVerified"
          >,
          serverName: "email_verified",
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "image"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    workspace: {
      name: "workspace",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "workspace",
            "id"
          >,
        },
        organizationId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "workspace",
            "organizationId"
          >,
          serverName: "organization_id",
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "workspace",
            "name"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "workspace",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "workspace",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
  },
  relationships: {},
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
